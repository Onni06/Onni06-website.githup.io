<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="laskin3.css">
</head>
<body>
    <div class="container-fluid">
    <h1 class="header">Luksia laskin</h1>
    <p>Laskin</p>
    <div class="mb-3 row">
        
        <div class="col-sm-10">
          <div data-previousoperand class="previous-operand"></div>
          <input type="textarea" class="form-control" id="inputPassword">
          <div data-current-operand class="current-operand"></div>
          
        </div>
  </div>
<p>Laskutoimitus</p>
<div class="col-sm-10">
   
  
  
  <select class="form-select" aria-label="Default select example">
      <option value="1" id="data-operation"></option>
        <option value="2" id="data-operation">+</option>
        <option value="3" id="data-operation">-</option>
        <option value="4" id="data-operation">*</option>
        <option value="5" id="data-operation">/</option>
    </select>
  </div>
  <button type="button" class="btn btn-primary nappi" id="data-operation">-</button>
  <button type="button" class="btn btn-primary" id="numero">7</button>
  <button type="button" class="btn btn-primary" id="numero">8</button>
  <button type="button" class="btn btn-primary" id="numero">9</button>
  <br>
  <button type="button" class="btn btn-primary" id="numero">4</button>
  <button type="button" class="btn btn-primary" id="numero">5</button>
  <button type="button" class="btn btn-primary" id="numero">6</button>
  <br>
  <button type="button" class="btn btn-primary" id="numero">1</button>
  <button type="button" class="btn btn-primary" id="numero">2</button>
  <button type="button" class="btn btn-primary" id="numero">3</button>
  
  <br>
  <button type="button" class="btn btn-primary" id="numero">0</button>
  <button type="button" class="btn btn-primary" id="data-operation">.</button>
  <button type="button" class="btn btn-primary" id="data-operation">C</button>


<img src="https://luksia.mmg.fi/pluginfile.php/381264/mod_assign/intro/Luksia_harmaa.png" class="rounded mx-auto d-block img-fluid">
<script src="laskin2.js"></script>
</div>
</body>
</html>

const inputField = document.getElementById('inputPassword');
const previousOperandTextElement = document.querySelector('[data-previousoperand]');
const currentOperandTextElement = document.querySelector('[data-currentoperand]');
const operationButtons = document.querySelectorAll('#data-operation');
const numberButtons = document.querySelectorAll('#numero');

let currentOperand = '';
let previousOperand = '';
let operation = undefined;

// Lisätään klikkikuuntelijat numero- ja operaatiopainikkeille
numberButtons.forEach(button => {
    button.addEventListener('click', () => {
        appendNumber(button.innerText);
        updateDisplay();
        console.log("moi")
    });
});

operationButtons.forEach(button => {
    button.addEventListener('click', () => {
        setOperation(button.innerText);
        updateDisplay();
    });
});

// Funktio numeropainikkeiden käsittelyä varten
function appendNumber(number) {
    currentOperand = currentOperand.toString() + number.toString();
}

// Funktio operaatioiden asettamiseen
function setOperation(op) {
    if (currentOperand === '') return;
    if (previousOperand !== '') {
        compute();
    }
    operation = op;
    previousOperand = currentOperand;
    currentOperand = '';
}

// Funktio laskutoimituksen suorittamiseen
function compute() {
    let computation;
    const prev = parseFloat(previousOperand);
    const current = parseFloat(currentOperand);
    if (isNaN(prev) || isNaN(current)) return;
    switch (operation) {
        case '+':
            computation = prev + current;
            break;
        case '-':
            computation = prev - current;
            break;
        case '*':
            computation = prev * current;
            break;
        case '/':
            computation = prev / current;
            break;
        default:
            return;
    }
    currentOperand = computation;
    operation = undefined;
    previousOperand = '';
}

// Päivitetään näyttö
function updateDisplay() {
    if (operation != null) {
        previousOperandTextElement.innerText = `${previousOperand} ${operation}`;
    } else {
        previousOperandTextElement.innerText = '';
    }
}

// Lisätään toiminnallisuus "C"-painikkeelle (tyhjennä)
document.querySelector('.btn-primary:nth-child(15)').addEventListener('click', () => {
    clear();
    updateDisplay();
});

// Tyhjennetään laskimen arvot
function clear() {
    currentOperand = '';
    previousOperand = '';
    operation = undefined;
}

.header {
    text-align: center;
}

body {
    background-color:#B2B4B3;
}

.btn-primary{
    width: 27vw;
}
img {
    margin-top: 25vw;

}
.nappi {
    height: 155px;
    float:right;
    width: 110px;
  
}
.btn-primary{
margin-top: 10px;
margin-left: 8px;
}


